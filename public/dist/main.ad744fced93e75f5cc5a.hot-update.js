"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateprojectalpha"]("main",{

/***/ "./public/js/achievementwindow.js":
/*!****************************************!*\
  !*** ./public/js/achievementwindow.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showAchievements: () => (/* binding */ showAchievements)\n/* harmony export */ });\n/* harmony import */ var _fetchdatafromstorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetchdatafromstorage.js */ \"./public/js/fetchdatafromstorage.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./public/js/utils.js\");\n/* harmony import */ var _achievementprogress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./achievementprogress.js */ \"./public/js/achievementprogress.js\");\n\r\n\r\n\r\n\r\nasync function showAchievements (levelid, mouseX, mouseY){\r\n\tconst response = await fetch('templates/achievementwindowtemplate.html');\r\n\tconst templateHtml = await response.text();\r\n\tconst achievementContent = document.createElement('div');\r\n\tachievementContent.innerHTML = templateHtml;\r\n\tconst canvas = document.getElementById('canvas');\r\n\tcanvas.appendChild(achievementContent);\r\n\tconst achievements = (0,_fetchdatafromstorage_js__WEBPACK_IMPORTED_MODULE_0__.getAchievementsForLevel)(levelid);\r\n\tconst iconsContainer = document.getElementById('achievementIconsContainer');\r\n\tconst overlay = document.getElementById('achievementOverlay');\r\n\tconst sidebar = document.getElementById('achievementSidebar');\r\n\tsidebar.style.top = mouseY + 'px';\r\n    sidebar.style.right = `${window.innerWidth - mouseX}px`; // Adjust for the cursor's position\r\n\r\n\tachievements.forEach((achievement) => {\r\n        const svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n        svgContainer.setAttribute('width', '64');\r\n        svgContainer.setAttribute('height', '64');\r\n\t\tconst useElement = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n        useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', `#${achievement.internal_name}`);\r\n        svgContainer.appendChild(useElement);\r\n\t\t\r\n\t\tsvgContainer.classList.add('achievement-icon');\r\n\t\tconst descriptionContainer = document.createElement('div');\r\n\t\tdescriptionContainer.classList.add('achievement-details');\r\n        iconsContainer.appendChild(svgContainer);\r\n\t\tsidebar.appendChild(descriptionContainer);\r\n\t\tif (!(0,_achievementprogress_js__WEBPACK_IMPORTED_MODULE_2__.isAchievementComplete)(achievement.internal_name)){\r\n\t\t\tsvgContainer.classList.add('dimmed');\r\n\t\t}\r\n\r\n\t\tsvgContainer.addEventListener('mouseenter', () => {\r\n\t\t\tshowDetails(achievement, descriptionContainer, svgContainer);\r\n\t\t});\r\n\t\tsvgContainer.addEventListener('mouseleave', () => {\r\n\t\t\thideDetails(descriptionContainer);\r\n\t\t});\r\n    });\r\n\toverlay.addEventListener('click', () => {\r\n\t\tcanvas.removeChild(achievementContent);\r\n\t\toverlay.style.display = 'none';\r\n\t});\r\n}\r\n\r\nfunction showDetails(achievement, descriptionContainer, iconElement){\r\n\tdescriptionContainer.style.visibility = 'visible';\r\n\tconst iconRect = iconElement.getBoundingClientRect();\r\n\tdescriptionContainer.style.top = `${iconRect.top}px`;\r\n\tdescriptionContainer.style.right = `${window.innerWidth - iconRect.left}px`;\r\n\tconst achievementName = document.createElement('div');\r\n\tachievementName.classList.add('achievement-name');\r\n\tachievementName.textContent = achievement.achievement_name;\r\n\tconst achievementDescription = document.createElement('div');\r\n\tachievementDescription.classList.add('achievement-description');\r\n\tachievementDescription.textContent = achievement.short_description;\r\n\tdescriptionContainer.appendChild(achievementName);\r\n\tdescriptionContainer.appendChild(achievementDescription);\r\n}\r\n\r\nfunction hideDetails(descriptionContainer){\r\n\tdescriptionContainer.style.visibility = 'hidden';\r\n\t(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.removeAllChildren)(descriptionContainer);\r\n}\n\n//# sourceURL=webpack://projectalpha/./public/js/achievementwindow.js?");

/***/ }),

/***/ "./public/js/fetchdatafromstorage.js":
/*!*******************************************!*\
  !*** ./public/js/fetchdatafromstorage.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAchievementData: () => (/* binding */ getAchievementData),\n/* harmony export */   getAchievementsForLevel: () => (/* binding */ getAchievementsForLevel),\n/* harmony export */   getLevelData: () => (/* binding */ getLevelData),\n/* harmony export */   getTileData: () => (/* binding */ getTileData)\n/* harmony export */ });\nfunction getLevelData() {\r\n    try {\r\n        const levelDataString = localStorage.getItem('levelData');\r\n        if (levelDataString === null) {\r\n            console.log('Failed: Missing levelData or achievementData in localStorage');\r\n            return null;\r\n        }\r\n        const levelData = JSON.parse(levelDataString);\r\n        return levelData;\r\n    } catch (error) {\r\n        console.error('Error parsing data from local storage for level and achievements:', error);\r\n        return null;\r\n    }\r\n}\r\nfunction getAchievementData() {\r\n    try {\r\n        const achievementDataString = localStorage.getItem('achievementData');\r\n        if (achievementDataString === null) {\r\n            console.log('Failed: Missing levelData or achievementData in localStorage');\r\n            return null;\r\n        }\r\n        const achievementData = JSON.parse(achievementDataString);\r\n        return achievementData;\r\n    } catch (error) {\r\n        console.error('Error parsing data from local storage for level and achievements:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getTileData() {\r\n\tconst tilesDataString = localStorage.getItem('tilesData');\r\n\tlet elementNames = {};\r\n\ttry {\r\n\t\tconst tilesData = JSON.parse(tilesDataString);\r\n\t\ttilesData.forEach((tile_obj) => {\r\n\t\t\telementNames[tile_obj.elementName.toLowerCase()] = tile_obj.an;\r\n\t\t\telementNames[tile_obj.latinName.toLowerCase()] = tile_obj.an;\r\n\t\t});\r\n\t\treturn { tilesData, elementNames };\r\n\t} catch (error) {\r\n\t\tconsole.error('Error parsing data from local storage:', error);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction getAchievementsForLevel(targetLevelId){\r\n    const achievements = getAchievementData();\r\n    const filteredObjects = achievements.filter(obj => obj.level_id === targetLevelId);\r\n    return filteredObjects;\r\n}\r\nfunction parseJsonSafely(jsonString) {\r\n    try {\r\n        return JSON.parse(jsonString);\r\n    } catch (error) {\r\n        console.error('Error parsing JSON:', error);\r\n        return null;\r\n    }\r\n}\n\n//# sourceURL=webpack://projectalpha/./public/js/fetchdatafromstorage.js?");

/***/ }),

/***/ "./public/js/mainmenu.js":
/*!*******************************!*\
  !*** ./public/js/mainmenu.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _scenemanager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scenemanager.js */ \"./public/js/scenemanager.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./public/js/utils.js\");\n/* harmony import */ var _signupbuttons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signupbuttons.js */ \"./public/js/signupbuttons.js\");\n/* harmony import */ var _fetchdatafromstorage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetchdatafromstorage.js */ \"./public/js/fetchdatafromstorage.js\");\n/* harmony import */ var _achievementprogress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./achievementprogress.js */ \"./public/js/achievementprogress.js\");\n\r\n\r\n\r\n\r\nconst canvas = document.getElementById('canvas');\r\nconst topContainer = document.getElementById('topContainer');\r\n\r\n\r\nclass MainMenu {\r\n    init() {\r\n    const levelData = (0,_fetchdatafromstorage_js__WEBPACK_IMPORTED_MODULE_3__.getLevelData)();\r\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLoggedIn)()){\r\n        (0,_signupbuttons_js__WEBPACK_IMPORTED_MODULE_2__.signUpButtons)(topContainer);\r\n    }\r\n\r\n    this.levels = levelData;\r\n        this.levels.forEach(level => {\r\n            if (level.production_ready === 1){\r\n                const tile = document.createElement('div');\r\n                tile.classList.add('level-tile');\r\n\r\n                const nameDiv = document.createElement('div');\r\n                nameDiv.classList.add('level-name');\r\n                nameDiv.textContent = level.display_name;\r\n\r\n                const iconsDiv = document.createElement('div');\r\n                iconsDiv.classList.add('level-icons');\r\n                const achievements = (0,_fetchdatafromstorage_js__WEBPACK_IMPORTED_MODULE_3__.getAchievementsForLevel)(level.level_id);\r\n                achievements.forEach((achievement) => {\r\n                    const symbolId = achievement.internal_name;\r\n                    const svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n                    svgContainer.setAttribute('width', '64');\r\n                    svgContainer.setAttribute('height', '64');\r\n                    \r\n                    const useElement = document.createElementNS('http://www.w3.org/2000/svg', 'use');\r\n                    useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', `#${symbolId}`);\r\n\r\n                    svgContainer.appendChild(useElement);\r\n                    if (!(0,_achievementprogress_js__WEBPACK_IMPORTED_MODULE_4__.isAchievementComplete)(achievement.internal_name)){\r\n\t\t\t            svgContainer.classList.add('dimmed');\r\n\t\t            }\r\n                    const iconContainer = document.createElement('div');\r\n                    iconContainer.classList.add('icon-container'); // Add any additional styling\r\n                    iconContainer.appendChild(svgContainer);\r\n    \r\n                    iconsDiv.appendChild(iconContainer);\r\n                });\r\n                const scoresDiv = document.createElement('div');\r\n                scoresDiv.classList.add('level-scores');\r\n                scoresDiv.textContent = '0/118'; // Implement Scoring Here\r\n\r\n                const startButton = document.createElement('button');\r\n                startButton.classList.add('start-button');\r\n                startButton.textContent = 'Start';\r\n\r\n                startButton.addEventListener('click', () => {\r\n\t\t\t        _scenemanager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].goToScene(level.internal_name);\r\n\t\t        });\r\n                tile.appendChild(nameDiv);\r\n                tile.appendChild(iconsDiv);\r\n                tile.appendChild(scoresDiv);\r\n                tile.appendChild(startButton);\r\n\r\n                canvas.appendChild(tile);\r\n            }\r\n        });\r\n    }\r\n    exit(){\r\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.removeAllChildren)(canvas);\r\n    }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainMenu);\n\n//# sourceURL=webpack://projectalpha/./public/js/mainmenu.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("7c69affe60ad3efd5bf8")
/******/ })();
/******/ 
/******/ }
);